#!/usr/bin/env node
var commands = require('../lib/commands.js'),
	program = require('commander'),
	util = require('util'),
	Logger = require('../lib/logger.js')

var help = true
program
	.version('1.0.0')
	.option('-v, --verbose', 'Enable verbose output.')

program
	.command('check [appdir]')
	.description('Check for updates and dependencies with updates.')
	.action(function(appdir) {
		help = false
		var logger = new Logger(null, Logger.appendToConsole, program.verbose)
		commands.check(appdir || process.cwd(), logger, function (err, found) {
			if(err) return console.log('error: ' + util.inspect(err))
			if(!found) {
				console.log('no updates found.');
			} else {
				console.log('app: ' + (found.app ? util.inspect(found.app) : 'ok.'))
				console.log('dependencies: ' + (found.dependencies.length > 0 ? util.inspect(found.dependencies) : 'ok.'))
				console.log('plugins: ' + (found.plugins.length > 0 ? util.inspect(found.plugins) : 'ok.'))
			}
		})
	})

program
	.command('notify [appdir]')
	.description('Watch for updates on an interval.')
	.action(function (appdir) {
		help = false
		var logger = new Logger(null, Logger.appendToConsole, program.verbose)
		var notifier = commands.notify(appdir || process.cwd(), logger);
		notifier.on('error', function (err) {
			console.error(error);
		});
		notifier.on('updateAvailable', function (update) {
			console.log('update: ' + util.inspect(update));
		});
	})

program
	.command('update [appdir]')
	.description('Update all dependencies right now.')
	.action(function (appdir) {
		help = false
		var logger = new Logger(null, Logger.appendToConsole, program.verbose)
		commands.update(appdir || process.cwd(), logger, function (err) {
			if(err) return console.log('' + util.inspect(err))			
			console.log('updated!')		
		})
	})

program
	.command('list [appdir]')
	.description('List all current dependencies and their versions')
	.action(function (appdir) {
		help = false
		var logger = new Logger(null, Logger.appendToConsole, program.verbose)
		commands.list(appdir || process.cwd(), logger, function (err, deps) {
			if(err) return console.log('' + err)
			console.log(util.inspect(deps))
		})
	})

program
	.command('isvalid [appdir]')
	.alias('isValid')
	.alias('valid')
	.description('Determines if all dependencies and plugins are already installed and satisfy the version requirements')
	.action(function (appdir) {
		help = false
		var logger = new Logger(null, Logger.appendToConsole, program.verbose)
		commands.isValid(appdir || process.cwd(), logger, function (err, valid) {
			if(err) return console.log('' + err)
			console.log(valid ? 'valid' : 'invalid')
		})
	})

program.parse(process.argv)
if(help) {
	program.help()
	process.exit(1)
}